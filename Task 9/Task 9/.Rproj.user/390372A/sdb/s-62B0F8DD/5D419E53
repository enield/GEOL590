{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Task 9 Development\"\nauthor: \"Emily Nield\"\ndate: \"March 27, 2017\"\noutput:\n  md_document:\n    variant: markdown_github\n---\n\n##Goal of Package\nThe goal is to create a package similar to the wesanderson package where you can give your plots a colour theme based off of film palettes. \n\n#Set up\n```{r}\n#Save all Images\nknitr::opts_chunk$set(\n  fig.path = \"figure-markdown_github/\"\n)\n```\n\n\n##Colour Palettes\n\nI have used this website to look at the colours of iconic films: http://www.esquire.com/style/news/g2760/color-palettes-iconic-films/\n\nTo get the hex code of these colours I used this website: http://www.color-hex.com/\n\nMy username on the colour website is emilynield. I have all the palettes hosted on that site. \n\n\n```{r}\nfilm_palettes <- list(\n  \nAkira = c(\"#115363\", \"#9C3111\", \"#5C4454\", \"#7EA228\", \"#7E2835\", \"#756B30\", \"#03182D\", \"#9D0500\", \"#1A3330\", \"#1F2549\"),\nAlice=c(\"#C98011\", \"#CD595A\", \"#750416\", \"#632115\", \"#A83904\", \"#BD654D\", \"#CBAA99\", \"#9A9460\", \"#845F0E\", \"#312F1A\"),\nAlien=c(\"#0B3241\", \"#445766\", \"#AFBBCB\", \"#D4D9DC\", \"#B7A2A1\", \"#764B55\", \"#362724\"),\nAmelie=c(\"#361E02\", \"#7B3803\", \"#C5732A\", \"#561101\", \"#2A3A09\", \"#9F2F01\"),\nAmericanBeauty=c(\"#E2A8B4\", \"#AF6B84\", \"#78404B\", \"#4C2329\", \"#341211\", \"#2B0007\", \"#480001\", \"#7A0300\", \"#860315\", \"#B8133D\"),\nAmericanPsycho=c(\"#2D262D\", \"#69625A\", \"#707588\", \"#CCCEDD\", \"#FBEBEC\", \"#BCA196\", \"#6E4D48\", \"#442520\", \"#240E11\"),\nAnchorman=c(\"#334012\", \"#435C35\", \"#395175\", \"#4E79A4\", \"#B2CCFF\", \"#E7CBDA\", \"#A87469\", \"#5F3C38\", \"#251515\"),\nBigLebowski=c(\"#6A6D76\", \"#6F270E\", \"#272727\", \"#755347\", \"#9FA5E3\", \"#968F7F\", \"#455A5B\", \"#663E0B\", \"#825167\", \"#38394D\"),\nBladeRunner=c(\"#1F6C64\", \"#69C0B8\", \"#94B4B1\", \"#547FA2\", \"#223F6B\", \"#182132\", \"#3B2D47\", \"#65507B\", \"#936B85\", \"#6C3F42\"),\nBluesBrothers=c(\"#E4B379\", \"#C29F7F\", \"#907C73\", \"#655A62\", \"#483843\", \"#291E22\", \"#321D18\", \"#523B2D\", \"#917F71\"),\nBlueVelvet=c(\"#3F0C11\", \"#5A050C\", \"#79022A\", \"#971E54\", \"#E25B9E\", \"#FDA9DD\", \"#F4BCC7\"),\nBreakfastTiffanys=c(\"#484620\", \"#6E303B\", \"#A08687\", \"#680200\", \"#5A5A7E\", \"#6C473F\", \"#3F7A88\"),\nClockworkOrange=c(\"#D8C500\", \"#C18103\", \"#F76035\", \"#DE2418\", \"#47161C\", \"#1E131B\", \"#23284E\", \"#2557D0\", \"#233C26\"),\nDeadpool=c(\"#3C0E11\", \"#5F262F\", \"#87515F\", \"#A28A8A\", \"#CACAD2\", \"#7F8595\", \"#34424F\", \"#131C23\"),\nEdwardScissorhands=c(\"#5B709B\", \"#B3897D\", \"#5F5D22\", \"#7C554E\", \"#F49987\", \"#C67DB4\", \"#A9A969\", \"#9593A0\", \"#F36E4B\"),\nEternalSunshine=c(\"#460008\", \"#774747\", \"#2F2935\", \"#B8B0AE\", \"#9C2831\", \"#C1A991\", \"#90604C\", \"#81747D\"),\nFargo=c(\"#41494B\", \"#3C1414\", \"#FFBDCF\", \"#AA7B75\", \"#47423C\", \"#5C0806\", \"#E1ECFE\", \"#FE7A87\"),\nFearLoathing=c(\"#CD3D25\", \"#FFBE46\", \"#903F00\", \"#2F130F\", \"#5A5865\", \"#3E350C\"),\nFerrisBueller=c(\"#775B4D\", \"#F6C8B9\", \"#D6D9FA\", \"#2F3646\", \"#8695AA\", \"#495B67\", \"#0D0B10\", \"#817775\"),\nFightClub=c(\"#292B15\", \"#99D4E6\", \"#071619\", \"#5B1714\", \"#A69B6E\", \"#F2BE37\", \"#C0B9E5\", \"#30DDA7\"),\nHatefulEight=c(\"#352C1D\", \"#0052A4\", \"#B5BDA6\", \"#A88D00\", \"#172621\", \"#27130A\", \"#8C0501\", \"#6B5E18\", \"#4C4C42\"),\nHer=c(\"#2F2A27\", \"#544524\", \"#A3431B\", \"#8E5E38\", \"#862D1F\", \"#73643D\" ,\"#A06919\", \"#E4C9AE\", \"#46382D\"),\nLabyrinth=c(\"#535561\", \"#746D63\", \"#744B5B\", \"#403436\", \"#562E2F\", \"#7E5F64\", \"#3C2619\", \"#666A85\", \"#151316\"),\nLifePi=c(\"#5A4824\", \"#AB8D44\", \"#F0E186\", \"#FCDF1F\", \"#C58B0E\", \"#9F5410\", \"#9E3C17\", \"#BC3F09\", \"#B20405\"),\nLostTranslation=c(\"#512630\", \"#6E546F\", \"#A29BBD\", \"#DEDCF4\", \"#76809B\", \"#344358\", \"#080D20\"),\nMadMax=c(\"#0D646B\", \"#16383A\", \"#404740\", \"#B88F73\", \"#ED8F49\", \"#E27812\", \"#5C2A09\", \"#2E1612\", \"#0F1217\"),\nMeanGirls=c(\"#6D0216\", \"#8D0E45\", \"#A0356D\", \"#A75F8D\", \"#BDA0BF\", \"#887A9D\", \"#56507C\", \"#32243E\", \"#150F19\"),\nMoulinRouge=c(\"#E67701\", \"#AD4858\", \"#720A00\", \"#93066F\", \"#53399A\", \"#002992\", \"#4E6344\"),\nMrFox=c(\"#2F3332\", \"#818181\", \"#D6CBC7\", \"#C4A98E\", \"#CB974C\", \"#8C5C34\", \"#43290E\", \"#362F1F\"),\nNapoleonDynamite=c(\"#3B0F10\", \"#93645E\", \"#575F9D\", \"#C19733\", \"#9D3303\", \"#D1CDDC\", \"#4B3F3F\", \"#7C434A\"),\nPulpFiction=c(\"#060503\", \"#B88B61\", \"#EADAC3\", \"#720906\", \"#49413F\", \"#3E5BFF\", \"#323B36\"),\nReservoirDogs=c(\"#513F4D\", \"#4E1B0A\", \"#2C191B\", \"#9B5766\", \"#4D577B\", \"#5B383C\", \"#DABBE5\", \"#A27F85\"),\nRockyHorror=c(\"#560300\", \"#844E28\", \"#D2A9A5\", \"#D7C4C8\", \"#1C1924\", \"#320D15\", \"#AC2300\"),\nRoyal=c(\"#579913\",\"#86704B\", \"#CE5D01\", \"#C3A978\", \"#D99300\", \"#210E08\", \"#6E522A\"),\nRushmore=c(\"#1F2032\", \"#967566\", \"#788567\", \"#5F5D6A\", \"#4D2120\", \"#BE7C66\", \"#474644\", \"#283523\", \"#342721\"),\nShopHorrors=c(\"#46411B\", \"#8F8315\", \"#AD8700\", \"#C67E8C\", \"#7D5939\", \"#8C4738\", \"#5A0103\"),\nSilenceLambs=c(\"#726554\", \"#371A16\", \"#A25E4B\", \"#C7BDBB\", \"#9F1B04\", \"#613613\", \"#7F3623\", \"#DCB8A2\"),\nStarWars=c(\"#495B83\", \"#2A2432\", \"#F46249\", \"#87758D\", \"#839DB4\", \"#4E321A\", \"#E5BFA8\", \"#96AE96\"),\nTaxiDriver=c(\"#271B1B\", \"#ADA4A7\", \"#5D474A\", \"#443A31\", \"#735D34\", \"#784542\", \"#847A83\", \"#AB938F\", \"#5A5F3F\"),\nTheGodfather=c(\"#4F2A17\", \"#844D14\", \"#1C1B17\", \"#CFBF9D\", \"#BF2316\", \"#EBAE5E\", \"#B7801C\",\"#4B3C1D\"),\nThelmaLouise=c(\"#313534\", \"#B47B9E\", \"#7C585C\", \"#9893BC\", \"#67161D\", \"#472C17\", \"#6D695E\", \"#CA927B\", \"#8898B1\", \"#5F7753\"),\nTheMatrix=c(\"#1C2F2D\", \"#334745\", \"#60807B\", \"#7A9A85\", \"#9DBEB3\", \"#C1D6C3\", \"#DCEEF0\"),\nTheProfessional=c(\"#B4775B\", \"#AD3429\", \"#6B140B\", \"#B65D35\", \"#C09129\", \"#464E29\", \"#9C8C73\", \"#3D4753\", \"#040001\"),\nTheRevenant=c(\"#262E31\", \"#7F7C77\", \"#E6E1DE\", \"#B0B9C2\", \"#92AFBF\", \"#4F8BA7\", \"#103E55\"),\nTheShining=c(\"#0D0A03\", \"#5C0D08\", \"#A06F5E\", \"#2D3743\", \"#564531\", \"#A33D15\", \"#698A91\", \"#3B5E36\", \"#F79787\"),\nTrumanShow=c(\"#133268\", \"#5776AD\", \"#869DD3\", \"#A1B9D5\", \"#BAC1D3\", \"#D7D1DB\", \"#A6A6B0\", \"#585D70\", \"#262431\"),\nTopGun=c(\"#180D07\", \"#3C1808\", \"#785A38\", \"#F2D87B\", \"#D1992C\", \"#C0590E\", \"#760E0F\", \"#04163C\", \"\n#1F4FED\"),\nWestSideStory=c(\"#867482\", \"#1B1821\", \"#847649\", \"#8A90A8\", \"#74474C\", \"#46413E\", \"#5D1628\", \"#322626\"),\nWolfWallStreet=c(\"#745054\", \"#56292C\", \"#A78265\", \"#600D29\", \"#5E2C23\", \"#E8D3C2\", \"#B57F75\", \"#624352\", \"#11131F\"),\nZissou=c(\"#6B6C5A\", \"#84849E\", \"#3F6490\", \"#1F143F\", \"#990600\", \"#460203\", \"#24100F\")\n\n\n)\n\n\n\n\n```\n\n\n##Colour Function\n\nNow that I have my list of colours I need to create a function. I want this to work on both a continuous and a discreet level. It is naturally set yp  for discreet but if you need more colours than what the palette can offefr you then you can interpolate between existing colours to get a continous palette. \n\n\n```{r}\nfilm_palette <- function(name, n, type = c(\"discrete\", \"continuous\")) {\n  type <- match.arg(type)\n\n  pal <- film_palettes[[name]] #add an error in case you can't find the name of the palette\n  if (is.null(pal))\n    stop(\"Palette not found.\")\n\n  if (missing(n)) {\n    n <- length(pal)\n  }\n\n  if (type == \"discrete\" && n > length(pal)) {\n    stop(\"Number of requested colors greater than what palette can offer\") #add an error if person is using discreet but there are not enough colour options in that palette\n  }\n\n  out <- switch(type,\n    continuous = colorRampPalette(pal)(n),\n    discrete = pal[1:n]\n  )\n  structure(out, class = \"palette\", name = name)\n}\n\n```\n\n\nExport palette\n```{r}\n#' @export\nprint.palette <- function(x, ...) {\n  n <- length(x)\n  old <- par(mar = c(0.5, 0.5, 0.5, 0.5))\n  on.exit(par(old))\n\n  image(1:n, 1, as.matrix(1:n), col = x,\n    ylab = \"\", xaxt = \"n\", yaxt = \"n\", bty = \"n\")\n\n  rect(0, 0.9, n + 1, 1.1, col = rgb(1, 1, 1, 0.8), border = NA)\n  text((n + 1) / 2, 1, labels = attr(x, \"name\"), cex = 1, family = \"serif\")\n}\n\n```\n\n##Examples\n\nLet's test out our new palette. Load in ggplot and play around with some of the data packages.\n```{r}\nlibrary(ggplot2)\n```\n\nPlot the mtcars package. You will need to add an aditional line in the ggplot to specify which palette to use\n```{r}\nggplot(data=mpg)+geom_point(mapping=aes(x=displ, y=hwy, color=class))+ \n  scale_color_manual(values = film_palette(\"ClockworkOrange\")) \n```\n\n\nPlay around with the diamonds data set. We will plot the same graph but with various movie palettes.\n\nDefault:\n```{r}\nggplot(data=diamonds)+\n  geom_bar(mapping=aes(cut, fill=cut))+\n  ggtitle(\"ggplot Default colours\")+\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n\nClockwork Orange:\n```{r}\nggplot(data=diamonds)+\n  geom_bar(mapping=aes(cut, fill=cut))+ \n  scale_fill_manual(values = film_palette(\"ClockworkOrange\"))+\n   ggtitle(\"Clockwork Orange\")+\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n\nMean Girls:\n```{r}\nggplot(data=diamonds)+geom_bar(mapping=aes(cut, fill=cut))+ \n   scale_fill_manual(values = film_palette(\"MeanGirls\"))+\n   ggtitle(\"Mean Girls\")+\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n\nThe Revenant:\n```{r}\nggplot(data=diamonds)+geom_bar(mapping=aes(cut, fill=cut))+ \n   scale_fill_manual(values = film_palette(\"TheRevenant\"))+\n   ggtitle(\"The Revenant\")+\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n\nThe Rocky Horror Picture Show:\n```{r}\nggplot(data=diamonds)+geom_bar(mapping=aes(cut, fill=cut))+ \n   scale_fill_manual(values = film_palette(\"RockyHorror\"))+\n   ggtitle(\"The Rocky Horror Picture Show\")+\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\nLet's try a continous example. \n\nMaking a heat map using this example: https://www.r-bloggers.com/how-to-make-a-simple-heatmap-in-ggplot2/\n\nCreate a data frame:\n```{r}\ndf.team_data <- expand.grid(teams = c(\"Team A\", \"Team B\", \"Team C\", \"Team D\")\n                           ,metrics = c(\"Metric 1\", \"Metric 2\", \"Metric 3\", \"Metric 4\", \"Metric 5\")\n                           )\n\n# add variable: performance\nset.seed(41)\ndf.team_data$performance <- rnorm(nrow(df.team_data))\n\n#inspect\nhead(df.team_data)\n```\n```{r}\n#Plot Normally\nggplot(data = df.team_data, aes(x = metrics, y = teams)) +\n  geom_tile(aes(fill = performance)) +\n   ggtitle(\"Default\")+\n  theme(plot.title = element_text(hjust = 0.5))\n\n```\n\n\n\n```{r}\npal <- film_palette(\"TrumanShow\", 100, type = \"continuous\")\n\nggplot(data = df.team_data, aes(x = metrics, y = teams, fill = value)) +\n  geom_tile(aes(fill = performance)) + \n  scale_fill_gradientn(colours = pal) + \n  scale_x_discrete(expand = c(0, 0)) +\n  scale_y_discrete(expand = c(0, 0)) + \n  coord_equal()+\n   ggtitle(\"The Truman Show\")+\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n\n\n##Conclusion\n\nI now having a working piece of code that can be developed into a package. As per task requirements, this will be uploaded on to it's repository on GitHub. I will call it Film Palettes instead of Task 9 so that it is easy for other people to download and use it. ",
    "created" : 1490627785360.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2067646837",
    "id" : "5D419E53",
    "lastKnownWriteTime" : 1490643442,
    "last_content_update" : 1490643442203,
    "path" : "D:/emily/Documents/Graduate Courses/R Class with Drew/Tasks/Task 9/Task 9.Rmd",
    "project_path" : "Task 9.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}